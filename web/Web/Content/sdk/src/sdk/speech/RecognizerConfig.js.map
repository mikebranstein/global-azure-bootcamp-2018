{"version":3,"sources":["../src/sdk/speech/RecognizerConfig.ts"],"names":[],"mappings":"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","file":"RecognizerConfig.js","sourcesContent":["\nexport enum RecognitionMode {\n    Interactive,\n    Conversation,\n    Dictation,\n}\n\nexport enum SpeechResultFormat {\n    Simple,\n    Detailed,\n}\n\nexport class RecognizerConfig {\n    private recognitionMode: RecognitionMode = RecognitionMode.Interactive;\n    private language: string;\n    private format: SpeechResultFormat;\n    private speechConfig: SpeechConfig;\n    private recognitionActivityTimeout: number;\n    private baseURL: string;\n\n    constructor(\n        platformConfig: SpeechConfig,\n        recognitionMode: RecognitionMode = RecognitionMode.Interactive,\n        language: string = \"en-us\",\n        format: SpeechResultFormat = SpeechResultFormat.Simple,\n        baseURL: string) {\n        this.speechConfig = platformConfig ? platformConfig : new SpeechConfig(new Context(null, null));\n        this.recognitionMode = recognitionMode;\n        this.language = language;\n        this.format = format;\n        this.recognitionActivityTimeout = recognitionMode === RecognitionMode.Interactive ? 8000 : 25000;\n        this.baseURL = baseURL;\n    }\n\n    public get RecognitionMode(): RecognitionMode {\n        return this.recognitionMode;\n    }\n\n    public get Language(): string {\n        return this.language;\n    }\n\n    public get Format(): SpeechResultFormat {\n        return this.format;\n    }\n\n    public get SpeechConfig(): SpeechConfig {\n        return this.speechConfig;\n    }\n\n    public get RecognitionActivityTimeout(): number {\n        return this.recognitionActivityTimeout;\n    }\n\n    public get IsContinuousRecognition(): boolean {\n        return this.recognitionMode !== RecognitionMode.Interactive;\n    }\n\n    public get BaseURL(): string {\n        return this.baseURL;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechConfig {\n    private context: Context;\n\n    constructor(context: Context) {\n        this.context = context;\n    }\n\n    public Serialize = (): string => {\n        return JSON.stringify(this, (key: any, value: any): any => {\n        if (value && typeof value === \"object\") {\n            const replacement: any = {};\n            for (const k in value) {\n                if (Object.hasOwnProperty.call(value, k)) {\n                    replacement[k && k.charAt(0).toLowerCase() + k.substring(1)] = value[k];\n                }\n            }\n            return replacement;\n        }\n        return value;\n        });\n    }\n\n    public get Context(): Context {\n        return this.context;\n    }\n\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Context {\n    private system: System;\n    private os: OS;\n    private device: Device;\n\n    constructor(os: OS, device: Device) {\n        this.system = new System();\n        this.os = os;\n        this.device = device;\n    }\n\n    public get System(): System {\n        return this.system;\n    }\n\n    public get OS(): OS {\n        return this.os;\n    }\n\n    public get Device(): Device {\n        return this.device;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class System {\n    private version: string;\n    constructor() {\n        // TODO: Tie this with the sdk Version somehow\n        this.version = \"1.0.00000\";\n    }\n    public get Version(): string {\n        // Controlled by sdk\n        return this.version;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class OS {\n\n    private platform: string;\n    private name: string;\n    private version: string;\n\n    constructor(platform: string, name: string, version: string) {\n        this.platform = platform;\n        this.name = name;\n        this.version = version;\n    }\n\n    public get Platform(): string {\n        return this.platform;\n    }\n\n    public get Name(): string {\n        return this.name;\n    }\n\n    public get Version(): string {\n        return this.version;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class Device {\n\n    private manufacturer: string;\n    private model: string;\n    private version: string;\n\n    constructor(manufacturer: string, model: string, version: string) {\n        this.manufacturer = manufacturer;\n        this.model = model;\n        this.version = version;\n    }\n\n    public get Manufacturer(): string {\n        return this.manufacturer;\n    }\n\n    public get Model(): string {\n        return this.model;\n    }\n\n    public get Version(): string {\n        return this.version;\n    }\n}\n"]}