{"version":3,"sources":["../src/sdk/speech/RecognitionEvents.ts"],"names":[],"mappings":"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","file":"RecognitionEvents.js","sourcesContent":["import { EventType, PlatformEvent } from \"../../common/Exports\";\nimport {\n    IDetailedSpeechPhrase,\n    ISimpleSpeechPhrase,\n    ISpeechEndDetectedResult,\n    ISpeechFragment,\n    ISpeechStartDetectedResult,\n} from \"./SpeechResults\";\n\nexport class SpeechRecognitionEvent extends PlatformEvent {\n    private requestId: string;\n\n    constructor(eventName: string, requestId: string, eventType: EventType = EventType.Info) {\n        super(eventName, eventType);\n\n        this.requestId = requestId;\n    }\n\n    public get RequestId(): string {\n        return this.requestId;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechRecognitionResultEvent<TResult> extends SpeechRecognitionEvent {\n    private result: TResult;\n\n    constructor(eventName: string, requestId: string, result: TResult) {\n        super(eventName, requestId);\n        this.result = result;\n    }\n\n    public get Result(): TResult {\n        return this.result;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class RecognitionTriggeredEvent extends SpeechRecognitionEvent {\n    private audioSourceId: string;\n    private audioNodeId: string;\n\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\n        super(\"RecognitionTriggeredEvent\", requestId);\n\n        this.audioSourceId = audioSourceId;\n        this.audioNodeId = audioNodeId;\n    }\n\n    public get AudioSourceId(): string {\n        return this.audioSourceId;\n    }\n\n    public get AudioNodeId(): string {\n        return this.audioNodeId;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class ListeningStartedEvent extends SpeechRecognitionEvent {\n    private audioSourceId: string;\n    private audioNodeId: string;\n\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string) {\n        super(\"ListeningStartedEvent\", requestId);\n        this.audioSourceId = audioSourceId;\n        this.audioNodeId = audioNodeId;\n    }\n\n    public get AudioSourceId(): string {\n        return this.audioSourceId;\n    }\n\n    public get AudioNodeId(): string {\n        return this.audioNodeId;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class ConnectingToServiceEvent extends SpeechRecognitionEvent {\n    private authFetchEventid: string;\n    private connectionId: string;\n\n    constructor(requestId: string, authFetchEventid: string, connectionId: string) {\n        super(\"ConnectingToServiceEvent\", requestId);\n        this.authFetchEventid = authFetchEventid;\n        this.connectionId = connectionId;\n    }\n\n    public get AuthFetchEventid(): string {\n        return this.authFetchEventid;\n    }\n\n    public get ConnectionId(): string {\n        return this.connectionId;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class RecognitionStartedEvent extends SpeechRecognitionEvent {\n    private audioSourceId: string;\n    private audioNodeId: string;\n    private authFetchEventId: string;\n    private connectionId: string;\n\n    constructor(requestId: string, audioSourceId: string, audioNodeId: string, authFetchEventId: string, connectionId: string) {\n        super(\"RecognitionStartedEvent\", requestId);\n\n        this.audioSourceId = audioSourceId;\n        this.audioNodeId = audioNodeId;\n        this.authFetchEventId = authFetchEventId;\n        this.connectionId = connectionId;\n    }\n\n    public get AudioSourceId(): string {\n        return this.audioSourceId;\n    }\n\n    public get AudioNodeId(): string {\n        return this.audioNodeId;\n    }\n\n    public get AuthFetchEventId(): string {\n        return this.authFetchEventId;\n    }\n\n    public get ConnectionId(): string {\n        return this.connectionId;\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechStartDetectedEvent extends SpeechRecognitionResultEvent<ISpeechStartDetectedResult> {\n    constructor(requestId: string, result: ISpeechStartDetectedResult) {\n        super(\"SpeechStartDetectedEvent\", requestId, result);\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechHypothesisEvent extends SpeechRecognitionResultEvent<ISpeechFragment> {\n    constructor(requestId: string, result: ISpeechFragment) {\n        super(\"SpeechHypothesisEvent\", requestId, result);\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechFragmentEvent extends SpeechRecognitionResultEvent<ISpeechFragment> {\n    constructor(requestId: string, result: ISpeechFragment) {\n        super(\"SpeechFragmentEvent\", requestId, result);\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechEndDetectedEvent extends SpeechRecognitionResultEvent<ISpeechEndDetectedResult> {\n    constructor(requestId: string, result: ISpeechEndDetectedResult) {\n        super(\"SpeechEndDetectedEvent\", requestId, result);\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechSimplePhraseEvent extends SpeechRecognitionResultEvent<ISimpleSpeechPhrase> {\n    constructor(requestId: string, result: ISimpleSpeechPhrase) {\n        super(\"SpeechSimplePhraseEvent\", requestId, result);\n    }\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class SpeechDetailedPhraseEvent extends SpeechRecognitionResultEvent<IDetailedSpeechPhrase> {\n    constructor(requestId: string, result: IDetailedSpeechPhrase) {\n        super(\"SpeechDetailedPhraseEvent\", requestId, result);\n    }\n}\n\nexport enum RecognitionCompletionStatus {\n    Success,\n    AudioSourceError,\n    AudioSourceTimeout,\n    AuthTokenFetchError,\n    AuthTokenFetchTimeout,\n    UnAuthorized,\n    ConnectTimeout,\n    ConnectError,\n    ClientRecognitionActivityTimeout,\n    UnknownError,\n}\n\n// tslint:disable-next-line:max-classes-per-file\nexport class RecognitionEndedEvent extends SpeechRecognitionEvent {\n    private audioSourceId: string;\n    private audioNodeId: string;\n    private authFetchEventId: string;\n    private connectionId: string;\n    private serviceTag: string;\n    private status: RecognitionCompletionStatus;\n    private error: string;\n\n    constructor(\n        requestId: string,\n        audioSourceId: string,\n        audioNodeId: string,\n        authFetchEventId: string,\n        connectionId: string,\n        serviceTag: string,\n        status: RecognitionCompletionStatus,\n        error: string) {\n\n        super(\"RecognitionEndedEvent\", requestId, status === RecognitionCompletionStatus.Success ? EventType.Info : EventType.Error);\n\n        this.audioSourceId = audioSourceId;\n        this.audioNodeId = audioNodeId;\n        this.connectionId = connectionId;\n        this.authFetchEventId = authFetchEventId;\n        this.status = status;\n        this.error = error;\n        this.serviceTag = serviceTag;\n    }\n\n    public get AudioSourceId(): string {\n        return this.audioSourceId;\n    }\n\n    public get AudioNodeId(): string {\n        return this.audioNodeId;\n    }\n\n    public get AuthFetchEventId(): string {\n        return this.authFetchEventId;\n    }\n\n    public get ConnectionId(): string {\n        return this.connectionId;\n    }\n\n    public get ServiceTag(): string {\n        return this.serviceTag;\n    }\n\n    public get Status(): RecognitionCompletionStatus {\n        return this.status;\n    }\n\n    public get Error(): string {\n        return this.error;\n    }\n}\n"]}