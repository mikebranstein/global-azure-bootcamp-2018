{"version":3,"sources":["../src/sdk/speech/CognitiveSubscriptionKeyAuthentication.ts"],"names":[],"mappings":";;AAAA,gDAAiF;AACjF,qDAA8D;AAE9D,IAAM,UAAU,GAAW,2BAA2B,CAAC;AAEvD;IAGI,gDAAY,eAAuB;QAAnC,iBAMC;QAEM,UAAK,GAAG,UAAC,gBAAwB;YACpC,MAAM,CAAC,uBAAa,CAAC,UAAU,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAA;QAEM,kBAAa,GAAG,UAAC,gBAAwB;YAC5C,MAAM,CAAC,uBAAa,CAAC,UAAU,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAA;QAbG,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACnB,MAAM,IAAI,2BAAiB,CAAC,iBAAiB,CAAC,CAAC;QACnD,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,0BAAQ,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;IAC9D,CAAC;IASL,6CAAC;AAAD,CAlBA,AAkBC,IAAA;AAlBY,wFAAsC","file":"CognitiveSubscriptionKeyAuthentication.js","sourcesContent":["import { ArgumentNullError, Promise, PromiseHelper } from \"../../common/Exports\";\nimport { AuthInfo, IAuthentication } from \"./IAuthentication\";\n\nconst AuthHeader: string = \"Ocp-Apim-Subscription-Key\";\n\nexport class CognitiveSubscriptionKeyAuthentication implements IAuthentication {\n    private authInfo: AuthInfo;\n\n    constructor(subscriptionKey: string) {\n        if (!subscriptionKey) {\n            throw new ArgumentNullError(\"subscriptionKey\");\n        }\n\n        this.authInfo = new AuthInfo(AuthHeader, subscriptionKey);\n    }\n\n    public Fetch = (authFetchEventId: string): Promise<AuthInfo> => {\n        return PromiseHelper.FromResult(this.authInfo);\n    }\n\n    public FetchOnExpiry = (authFetchEventId: string): Promise<AuthInfo> => {\n        return PromiseHelper.FromResult(this.authInfo);\n    }\n}\n"]}