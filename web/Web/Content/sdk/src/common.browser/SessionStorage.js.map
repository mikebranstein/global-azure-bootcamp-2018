{"version":3,"sources":["../src/common.browser/SessionStorage.ts"],"names":[],"mappings":";;AAAA,6CAAwE;AAExE;IAAA;QAEW,QAAG,GAAG,UAAC,GAAW;YACrB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACP,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;YAED,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC,CAAA;QAEM,aAAQ,GAAG,UAAC,GAAW,EAAE,UAAkB;YAC9C,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACP,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;YAED,IAAM,KAAK,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC1C,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBACxC,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;YAC5C,CAAC;YAED,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC,CAAA;QAEM,QAAG,GAAG,UAAC,GAAW,EAAE,KAAa;YACpC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACP,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;YAED,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC,CAAA;QAEM,WAAM,GAAG,UAAC,GAAW;YACxB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACP,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAC;YACvC,CAAC;YAED,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAA;IACL,CAAC;IAAD,qBAAC;AAAD,CAtCA,AAsCC,IAAA;AAtCY,wCAAc","file":"SessionStorage.js","sourcesContent":["import { ArgumentNullError, IKeyValueStorage } from \"../common/Exports\";\n\nexport class SessionStorage implements IKeyValueStorage {\n\n    public Get = (key: string): string => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        return sessionStorage.getItem(key);\n    }\n\n    public GetOrAdd = (key: string, valueToAdd: string): string => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        const value = sessionStorage.getItem(key);\n        if (value === null || value === undefined) {\n            sessionStorage.setItem(key, valueToAdd);\n        }\n\n        return sessionStorage.getItem(key);\n    }\n\n    public Set = (key: string, value: string): void => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        sessionStorage.setItem(key, value);\n    }\n\n    public Remove = (key: string): void => {\n        if (!key) {\n            throw new ArgumentNullError(\"key\");\n        }\n\n        sessionStorage.removeItem(key);\n    }\n}\n"]}